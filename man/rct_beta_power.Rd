% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rct_beta_power.R
\name{rct_beta_power}
\alias{rct_beta_power}
\title{Estimate Bayesian Power for a 2-arm Binomial RCT (Beta-Binomial Conjugate)}
\usage{
rct_beta_power(
  B = 10000,
  p_c,
  p_t,
  n_c,
  n_t,
  M = 0,
  threshold,
  prior = c("flat", "power"),
  prior_args = list(),
  n_draws = 2000,
  show_progress = TRUE,
  method = c("cpp", "simulate"),
  seed = NULL
)
}
\arguments{
\item{B}{Integer. Number of trial simulations (ignored if \code{method = "exact"}).}

\item{p_c, p_t}{Numeric in [0,1]. True response probabilities in control and treatment arms.}

\item{n_c, n_t}{Integers. Sample sizes in control and treatment arms.}

\item{M}{Numeric. Margin on the risk-difference scale. Default is 0 (superiority/equivalence).}

\item{threshold}{Posterior probability cutoff (e.g. 0.9).}

\item{prior}{Character. Prior type: \code{"flat"} or \code{"power"}.}

\item{prior_args}{List with prior hyperparameters. Optional elements:
\itemize{
\item \code{a0}, \code{y_0}, \code{n_0} for power prior
\item \code{a_base_c}, \code{b_base_c} for control arm prior
\item \code{a_base_t}, \code{b_base_t} for treatment arm prior
}}

\item{n_draws}{Integer. Number of posterior samples per trial.}

\item{show_progress}{Logical. Show text progress bar?}

\item{method}{Character. Either \code{"simulate"} (pure R) or \code{"cpp"} (fast C++).}

\item{seed}{Optional integer. If provided, sets the RNG seed for reproducibility.}
}
\value{
A list with:
\item{estimate}{Estimated power (probability of success)}
\item{mc_se}{Monte Carlo standard error}
\item{successes}{Number of trials with successful outcome}
\item{B}{Number of simulations}
}
\description{
Computes the power of a Bayesian randomized controlled trial
using conjugate Beta-Binomial models. Can use exact simulation in R or fast
simulation in C++.
}
\examples{
# Using C++ backend
rct_beta_power(
  B = 1000, p_c = 0.85, p_t = 0.85,
  n_c = 30, n_t = 30, M = -0.1,
  threshold = 0.9, prior = "flat",
  method = "cpp", show_progress = FALSE
)

}
