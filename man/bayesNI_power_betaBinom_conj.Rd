% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bayesNI-conj-calibrate.R
\name{bayesNI_power_betaBinom_conj}
\alias{bayesNI_power_betaBinom_conj}
\title{Bayesian NI power via conjugate Beta–Binomial}
\usage{
bayesNI_power_betaBinom_conj(
  B = 1000,
  p_c,
  p_t,
  n_c,
  n_t,
  M,
  threshold,
  prior = c("flat", "power"),
  prior_args = list(),
  n_draws = 2000,
  seed = NULL,
  show_progress = TRUE
)
}
\arguments{
\item{B}{Integer. Number of simulated trials.}

\item{p_c, p_t}{Numeric in [0,1]. True response probabilities in control and treatment.}

\item{n_c, n_t}{Integers. Sample sizes in control and treatment.}

\item{M}{Numeric. NI margin on the risk-difference scale (e.g., \code{-0.20}).}

\item{threshold}{Numeric in (0,1). Posterior probability cutoff (gamma) for declaring NI.}

\item{prior}{Either \code{"flat"} (Beta(1,1) both arms) or \code{"power"} (power prior on control).}

\item{prior_args}{List of hyperparameters when \code{prior = "power"}:
\itemize{
\item \code{a0}: discount factor in \verb{[0,1]}
\item \code{y_0}, \code{n_0}: historical control responders and sample size
\item \code{a_base}, \code{b_base}: baseline Beta parameters (defaults \code{1}, \code{1})
}}

\item{n_draws}{Integer. Posterior Monte Carlo draws per trial (for \code{Pr(NI)} evaluation).}

\item{seed}{Optional integer RNG seed (reproducibility of the outer loop).}

\item{show_progress}{Logical. Show a text progress bar.}
}
\value{
Numeric scalar: estimated Bayesian power (i.e., \verb{Pr(declare NI)}).
}
\description{
Monte Carlo estimate of Bayesian non-inferiority (NI) \emph{power} using
conjugate Beta–Binomial updates (no MCMC). Each replicate simulates a trial,
computes the posterior probability of NI, and compares it to a fixed
threshold \code{threshold}.
}
\examples{
\donttest{
bayesNI_power_betaBinom_conj(
  B = 200, p_c = .85, p_t = .85, n_c = 29, n_t = 29,
  M = -0.20, threshold = 0.91, prior = "flat", n_draws = 1000
)
}

}
\seealso{
\code{\link{bayesNI_calibrate_betaBinom_conj}}, \code{\link{bayesNI_type1_betaBinom_conj}}

Other conjugate-NI: 
\code{\link{bayesNI_calibrate_betaBinom_conj}()},
\code{\link{bayesNI_run_betaBinom_conj}()},
\code{\link{bayesNI_type1_betaBinom_conj}()}
}
\concept{conjugate-NI}
